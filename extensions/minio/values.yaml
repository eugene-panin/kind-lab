## MinIO Configuration
## https://github.com/minio/minio/tree/master/helm/minio

## Default values for minio.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

## MinIO image
image:
  repository: quay.io/minio/minio
  tag: "RELEASE.2024-12-18T13-15-44Z"
  pullPolicy: IfNotPresent

## MinIO imagePullSecrets
imagePullSecrets: []

## MinIO nameOverride
nameOverride: ""

## MinIO fullnameOverride
fullnameOverride: ""

## MinIO mode - standalone for single node
mode: standalone

## MinIO serviceAccount
serviceAccount:
  create: true
  name: "minio"
  annotations: {}
  labels: {}

## MinIO podAnnotations
podAnnotations: {}

## MinIO podLabels
podLabels: {}

## MinIO resources
resources:
  requests:
    memory: 256Mi
    cpu: 100m
  limits:
    memory: 512Mi
    cpu: 500m

## MinIO nodeSelector
nodeSelector: {}

## MinIO tolerations
tolerations: []

## MinIO affinity
affinity: {}

## MinIO securityContext
securityContext:
  enabled: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

## MinIO persistence
persistence:
  enabled: true
  storageClass: "standard"
  accessMode: ReadWriteOnce
  size: 8Gi

## MinIO service
service:
  type: ClusterIP
  port: 9000

## MinIO console service
consoleService:
  type: ClusterIP
  port: 9001

## MinIO ingress for API
ingress:
  enabled: true
  ingressClassName: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "mkcert-issuer"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  path: /
  hosts:
    - minio.${LOCAL_DOMAIN}
  tls:
    - secretName: local-dev-tls
      hosts:
        - minio.${LOCAL_DOMAIN}

## MinIO console ingress
consoleIngress:
  enabled: true
  ingressClassName: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "mkcert-issuer"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  path: /
  hosts:
    - minio-console.${LOCAL_DOMAIN}
  tls:
    - secretName: local-dev-tls
      hosts:
        - minio-console.${LOCAL_DOMAIN}

## MinIO root credentials (from environment variables)
rootUser: ${MINIO_ADMIN}
rootPassword: ${MINIO_ADMIN_PASSWORD}

## MinIO users (will be created after deployment)
users:
  - accessKey: ${MINIO_JUPYTER_USER}
    secretKey: ${MINIO_JUPYTER_PASSWORD}
    policy: readwrite

## MinIO buckets (will be created after deployment)
buckets:
  - name: datasets
    policy: private
    purge: false
  - name: models
    policy: private
    purge: false
  - name: artifacts
    policy: private
    purge: false
  - name: cache
    policy: private
    purge: false 